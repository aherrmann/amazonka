extensions = [
    "ConstraintKinds",
    "DataKinds",
    "DefaultSignatures",
    "DeriveAnyClass",
    "DeriveFoldable",
    "DeriveFunctor",
    "DeriveGeneric",
    "DeriveTraversable",
    "DerivingStrategies",
    "DerivingVia",
    "DuplicateRecordFields",
    "FlexibleContexts",
    "FlexibleInstances",
    "GADTs",
    "GeneralizedNewtypeDeriving",
    "LambdaCase",
    "NamedFieldPuns",
    "NoImplicitPrelude",
    "OverloadedStrings",
    "PackageImports",
    "PatternSynonyms",
    "RankNTypes",
    "RecordWildCards",
    "ScopedTypeVariables",
    "StandaloneDeriving",
    "StrictData",
    "TupleSections",
    "TypeApplications",
    "TypeFamilies",
    "ViewPatterns",
]

ghc_flags = ["-X" + ext for ext in extensions] + [
    "-Wall",
    "-funbox-strict-fields",
    "-fwarn-incomplete-uni-patterns",
    "-fwarn-incomplete-record-updates",
    "-fwarn-missing-deriving-strategies",
    "-fwarn-unused-packages",
]

haskell_library(
    name = "amazonka-core",
    srcs = glob(["src/**/*.hs"]),
    compiler_flags = ghc_flags,
    visibility = ["//amazonka/..."],
    deps = [
        "//haskell:aeson",
        "//haskell:attoparsec",
        "//haskell:base",
        "//haskell:bytestring",
        "//haskell:case-insensitive",
        "//haskell:conduit",
        "//haskell:conduit-extra",
        "//haskell:containers",
        "//haskell:crypton",
        "//haskell:deepseq",
        "//haskell:hashable",
        "//haskell:http-client",
        "//haskell:http-conduit",
        "//haskell:http-types",
        "//haskell:lens",
        "//haskell:memory",
        "//haskell:regex-posix",
        "//haskell:resourcet",
        "//haskell:scientific",
        "//haskell:text",
        "//haskell:time",
        "//haskell:transformers",
        "//haskell:unordered-containers",
        "//haskell:xml-conduit",
        "//haskell:xml-types",
    ],
)
